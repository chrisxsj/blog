您好：
http://blog.itpub.net/post/468/51163
 基表和物化视图都是当前用户下；
 grant create session, unlimited tablespace, create table to test;
 grant create materialized view to test;
 
基表不在当前用户下:
 grant create session, unlimited tablespace, create table to test;
 grant create materialized view to test;
 grant select on test1.t to test;
 建立其他用户下的物化视图:
 grant create session, unlimited tablespace to test;
 grant creat any materialized view to test;
 grant create session, unlimited tablespace, create table to mview_owner;
 grant select on test1.t to mview_owner;
 create materialized view mview_owner.mv_t1 as select * from test1.t;
 TEST用户的CREATE TABLE, CREATE MATERIALIZED和对基表的查询权限是不必要


下面这个是基于 dblink的物化视图，查询子句中连接条件不是主键，因此不支持 fast
refresh。
CREATE MATERIALIZED VIEW TPCRM_LEADS_INFO
BUILD IMMEDIATE
REFRESH COMPLETE
SELECT o.customer_id as id,
o.gmt_create,
o.gmt_modified,
o.owner_1,
c.country,
c.member_id
FROM caesar.caesar_customer_ggs@crmg c, caesar.caesar_opportunity@crmg o
WHERE c.is_deleted = ‘n’
AND o.is_deleted = ‘n’
AND c.cus_id = o.customer_id;


dbms_mview.explain_mview ：如果物化视图创建时报错，可以使用该方法检查报
错原因。下面是个示例，来源于杨铤锟的 博客


检查基表上依赖的物化视图：
select a.owner, a.name, a.mview_site
from dba_registered_mviews a, dba_base_table_mviews b
where a.mview_id = b.mview_id
and b.master = ‘ 基表名‘;
 
=======================建立快速刷新的物化视图
 基表在当前用户下：这种情况建立快速刷新的物化视图不需要额外的权限
 grant create session, unlimited tablespace, create table to test;
 grant create materialized view to test;
 基表不在当前用户中：将用户基表的物化视图日志的查询权限授予用户
 grant create session, unlimited tablespace, create table to test;
 grant create materialized view to test;
 grant select on test1.t to test;
 grant select on test1.MLOG$_T to test;
 建立其他用户下的物化视图:
 grant create session, unlimited tablespace, create table to mview_owner;
 grant creat any materialized view to test;
 grant select on test1.t to mview_owner;
 grant select on test1.MLOG$_T to mview_owner;
 conn test/test
 create materialized view mview_owner.mv_t1 refresh fast as   select * from test1.t;
  
 创建ON COMMIT刷新方式的物化视图都是快速刷新的，完全刷新的ON COMMIT物化视图的意义不大，因此本文例子中使用的都是REFRESH FAST ON COMMIT方式。而是否快速刷新对权限的影响不过是增加了对基表物化视图日志的查询权限。
 第一种情况不需要额外的权限，和创建物化视图的基本权限一致。
 grant create materialized view to test;
 
第二种情况可以建立快速刷新的物化视图，但是建立ON COMMIT的快速刷新的物化视图就缺少权限了。有两种授权方法，一个授予基表的ON COMMIT REFRESH权限，另一种是授予ON COMMIT REFRESH系统权限，不过第二种方法的权限比较大。
grant create materialized view to test;
 grant select on test1.t to test;
 grant select on test1.MLOG$_T to test;
 grant on commit refresh on test1.t to test;/grant on commit refresh to test;
 conn test/test
 create materialized view test.mv_t1 refresh fast on commit as select * from test1.t;
 情况三：必须是物化视图的拥有者具有这个权限才可以。而创建者只需要CREATE ANY MATERIALIZED权限:
 grant create session, unlimited tablespace, create table to mview_owner;
 grant creat any materialized view to test;
 grant select on test1.t to mview_owner;
 grant select on test1.MLOG$_T to mview_owner;
 grant on commit refresh on test1.t to mview_owner;
 conn test/test
 create materialized view mview_owenr.mv_t1 refresh fast on commit as select * from test1.t;
 
========================查询重写的物化视图
 建立当前用户下的支持查询重写的物化视图:
 grant create session, unlimited tablespace, create table to test;
 grant create materialized view to test;
 基表不在当前用户下:两种授权方法，一种是给TEST用户YANGTK.T表的查询重写权限，另一种是给TEST用户GLOBAL QUERY REWRITE权限。
 grant create session, unlimited tablespace, create table to test;
 grant create materialized view to test;
 grant select on test1.t to test;
 grant query rewrite on test1.t to test;/grant global query rewrite to test;
 conn test/test
 create metrialized view test.mv_1 enable query rewrite as select * from test1.t;
 
在其他用户下建立物化视图:需要T的QUERY REWRITE权限的是mview_owner用户而不是test用户
 grant create session, unlimited tablespace to test;
 grant create session, unlimited tablespace, create table to mview_owner;
 grant creat any materialized view to test;
 grant select on test1.t to mview_owner;
 grant query rewrite on test1.t to mview_owner;/grant global query rewrite to mview_owner;
 conn test/test
 create materialized view mview_owner.mv_t1 enable query rewrite as select * from test1.t;
 建立其他用户下的ON PREBUILT TABLE的物化视图:建立这种支持查询重写的ON PREBUILT TABLE物化视图，且不是在当前用户下。则创建用户必须拥有包含表的WITH GRANT OPTION的查询权限
 grant create session, unlimited tablespace to test;
 grant create session, unlimited tablespace, create table to mview_owner;
 grant creat any materialized view to test;
 grant select on test1.t to mview_owner;
 grant query rewrite on test1.t to mview_owner;/grant global query rewrite to mview_owner;
 grant select on test1.t to test with grant option
 conn test/test
 create meterialized view mview_owner.mv_t2 on prebuilt table enable query rewrite as select * from test1.t;
